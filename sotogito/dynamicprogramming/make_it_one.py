"""
1. 5로 나누어 떨어지면, 5로 나눈다.
2. 3''
3. 2''
4. 1을 뺀다.

최소한의 연산 횟수
"""

x = int(input())

count = 0
result = x
while True:
    if result == 1:
        break

    if result % 5 == 0:
        result = result // 5
        count += 1
        continue

    elif result % 3 == 0:
        keep = result // 3
        if keep % 5 == 0 or keep == 1:
            result = result // 3
            count += 1
            continue

    elif result % 2 == 0:
        keep = result // 2
        if keep % 5 == 0  or keep == 1 :
            result = result // 2
            count += 1
            continue


    result -= 1
    count += 1


print(count)

"""
구현 설명

최소한의 계산을 하게하는 공통점은 뭘까?
예를들어 26으로 설명을 하자면
1. 26- 1
2. 25/5 = 5
3/ 5/5 = 1

27은
1. 27-1
2. 26-1
3. 25/5
4. 5/5 = 1

31은
1. 31- 1 = 30
2. 30 / 5 = 6
3. 6-1=5
4. 5/5= 1

공통적인 특징은 = 5로 나눠질 수 있는 수를 먼저 만들어라. 이다

나는 처음에 계산되어야하는 우선도가 다으과 같다고 생각하였다.
1. 5로 나누기
2. 3으로 나누기
3. 2로 나누기
4. 1빼기
왜냐면 우선적으로 수를 작게 만들어 주기 때문이다.

하지만 저 로직대로 구해보면
26에서 만약 2로 나눌수 있어 나누면 13이 된다.
그리고 3,5,2 나눌 수 있는 수가 없어서 -을 빼면 12이고
3으로 나눌 수 있으니 4,
4에서 2를 나누면 2
2에서 2를 나누면 1

촐 5번의 계산이 필요하다.

즉. 5의 배수가 아닌 수를 먼저 5의 배수로만들어주는 것이 중요하다.
그러기 위해서는 2,3로 나웠을 때 5의 배수가 되는지 확인이 필요했다.
5의 배수가 되는지 확인이 되면 나누었다.

근데 이 로직만 해주면 만약 16일때 아래와 같은 문제가 일어난다.
1. 16-1 = 15
2. 15/5 = 3
3. 3 -1 = 2
4. 2-1

사실 2번 로직에서 3으로 나눠주고 끝나야한다.
그래서 2,3을 나눌때 1이 되는지 추가로 확인해주었다ㅏ

"""